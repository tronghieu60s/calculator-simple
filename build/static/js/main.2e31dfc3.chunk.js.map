{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","calculation","event","key","state","result","value","target","innerText","lastPositonCal","length","eval","setState","statusEqual","deleteOne","deleteCal","slice","lastPositionCal","deleteAll","calculator","darkMode","statusDarkMode","darkModeButton","localStorage","setItem","JSON","stringify","componentDidMount","parse","getItem","fun","addEventListener","keyCode","button","querySelectorAll","i","classList","add","remove","this","id","className","onClick","src","alt","toLocaleString","Component"],"mappings":"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","file":"static/js/main.2e31dfc3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nexport class App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      calculation: '',\r\n      result: 0,\r\n      statusEqual: false,\r\n      statusDarkMode: false\r\n    }\r\n  }\r\n\r\n  calculation = (event, key = 0) => {\r\n    let { calculation, result } = this.state;\r\n    let value;\r\n    if(key === 0){\r\n      value = event.target.innerText;\r\n    }else{\r\n      value = event.key;\r\n    }\r\n    let lastPositonCal = calculation[calculation.length - 1];\r\n    if (result !== 0) {\r\n      if (typeof lastPositonCal !== \"undefined\") {\r\n        if (lastPositonCal.match(/[+\\-*/%.]/)) {\r\n          if (!value.match(/[+\\-*/%.]/)) {\r\n            calculation += value;\r\n            result = eval(calculation);\r\n          }\r\n        } else {\r\n          if (!value.match(/[+\\-*/%.]/)) {\r\n            calculation += value;\r\n            result = eval(calculation);\r\n          } else {\r\n            calculation += value;\r\n          }\r\n        }\r\n      } else {\r\n        calculation += value;\r\n        result = value;\r\n      }\r\n    } else {\r\n      if (!value.match(/[*/%]/)) {\r\n        calculation += value;\r\n        result = value;\r\n      }\r\n    }\r\n    this.setState({\r\n      calculation,\r\n      result,\r\n      statusEqual: false\r\n    })\r\n  }\r\n\r\n  deleteOne = () => {\r\n    let { calculation, result } = this.state;\r\n    let deleteCal = calculation.slice(0, -1);\r\n    let lastPositionCal = deleteCal[deleteCal.length - 1];\r\n    if (typeof lastPositionCal !== \"undefined\") {\r\n      if (!lastPositionCal.match(/[+\\-*/%.]/)) {\r\n        result = eval(deleteCal);\r\n      }\r\n    } else {\r\n      result = 0;\r\n    }\r\n    calculation = deleteCal;\r\n    this.setState({\r\n      calculation,\r\n      result\r\n    })\r\n  }\r\n\r\n  deleteAll = () => {\r\n    this.setState({\r\n      calculation: '',\r\n      result: 0\r\n    })\r\n  }\r\n\r\n  calculator = () => {\r\n    let { statusEqual } = this.state;\r\n    if (statusEqual) {\r\n      this.setState({\r\n        result: 0,\r\n        calculation: '',\r\n        statusEqual: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        statusEqual: true\r\n      })\r\n    }\r\n  }\r\n\r\n  darkMode = () => {\r\n    let {statusDarkMode} = this.state;\r\n    this.darkModeButton(!statusDarkMode);\r\n    this.setState({\r\n      statusDarkMode: !statusDarkMode\r\n    })\r\n    localStorage.setItem(\"DARKMODE-STATUS\",JSON.stringify(!statusDarkMode));\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let statusDarkMode = JSON.parse(localStorage.getItem(\"DARKMODE-STATUS\"));\r\n    let fun = this;\r\n    window.addEventListener(\"keydown\", function(event){\r\n      if(event.key.match(/[0-9+\\-*/%.]/)){\r\n        fun.calculation(event, 1);\r\n      }else if(event.key === \"Backspace\"){\r\n        fun.deleteOne();\r\n      }else if(event.key === \"Delete\"){\r\n        fun.deleteAll();\r\n      }else if(event.key === \"=\" || event.keyCode === 32){\r\n        fun.calculator();\r\n      }\r\n    })\r\n    this.darkModeButton(statusDarkMode);\r\n    this.setState({\r\n      statusDarkMode\r\n    })\r\n  }\r\n\r\n  darkModeButton = (statusDarkMode) => {\r\n    if(statusDarkMode){\r\n      let button = document.querySelectorAll(\".button:not(.sign):not(.equal)\");\r\n      for (let i = 0; i < button.length; i++) {\r\n        button[i].classList.add(\"dark\");\r\n      }\r\n    }else{\r\n      let button = document.querySelectorAll(\".button:not(.sign):not(.equal)\");\r\n      for (let i = 0; i < button.length; i++) {\r\n        button[i].classList.remove(\"dark\");\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { calculation, result, statusEqual, statusDarkMode } = this.state;\r\n    return (\r\n      <div id=\"wrap\" className={statusDarkMode ? 'dark' : ''}>\r\n        <div className={`calculator ${statusDarkMode ? 'dark' : ''}`}>\r\n          <div className=\"block-top\">\r\n            <div onClick={this.darkMode} id=\"bg-mode\"><img src={statusDarkMode ? 'icons/sunny.svg' : 'icons/moon.svg'} alt=\"\" /></div>\r\n            <div className={`calculation ${statusDarkMode ? 'dark' : ''}`}>{calculation}</div>\r\n            <div className={`result ${statusEqual ? 'equal' : ''} ${statusDarkMode ? 'dark' : ''}`}>{result.toLocaleString()}</div>\r\n          </div>\r\n          <div className=\"block-button\">\r\n            <div className=\"row\">\r\n              <div onClick={this.deleteOne} className=\"button delete\">C</div>\r\n              <div onClick={this.deleteAll} className=\"button delete-all\">AC</div>\r\n              <div onClick={this.calculation} className=\"button sign\">%</div>\r\n              <div onClick={this.calculation} className=\"button sign\">/</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div onClick={this.calculation} className=\"button\">7</div>\r\n              <div onClick={this.calculation} className=\"button\">8</div>\r\n              <div onClick={this.calculation} className=\"button\">9</div>\r\n              <div onClick={this.calculation} className=\"button sign\">*</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div onClick={this.calculation} className=\"button\">4</div>\r\n              <div onClick={this.calculation} className=\"button\">5</div>\r\n              <div onClick={this.calculation} className=\"button\">6</div>\r\n              <div onClick={this.calculation} className=\"button sign\">-</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div onClick={this.calculation} className=\"button\">1</div>\r\n              <div onClick={this.calculation} className=\"button\">2</div>\r\n              <div onClick={this.calculation} className=\"button\">3</div>\r\n              <div onClick={this.calculation} className=\"button sign\">+</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div onClick={this.calculation} className=\"button col2\">0</div>\r\n              <div onClick={this.calculation} className=\"button\">.</div>\r\n              <div onClick={this.calculator} className=\"button equal\">=</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"sourceRoot":""}